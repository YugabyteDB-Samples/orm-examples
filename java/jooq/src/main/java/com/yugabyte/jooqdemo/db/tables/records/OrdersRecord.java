/*
 * This file is generated by jOOQ.
 */
package com.yugabyte.jooqdemo.db.tables.records;


import com.yugabyte.jooqdemo.db.tables.Orders;

import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.2",
        "schema version:jooq_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OrdersRecord extends UpdatableRecordImpl<OrdersRecord> implements Record4<UUID, Long, BigDecimal, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.orders.order_id</code>.
     */
    public void setOrderId(UUID value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.orders.order_id</code>.
     */
    public UUID getOrderId() {
        return (UUID) get(0);
    }

    /**
     * Setter for <code>jooq.orders.user_id</code>.
     */
    public void setUserId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.orders.user_id</code>.
     */
    public Long getUserId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>jooq.orders.order_total</code>.
     */
    public void setOrderTotal(BigDecimal value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.orders.order_total</code>.
     */
    public BigDecimal getOrderTotal() {
        return (BigDecimal) get(2);
    }

    /**
     * Setter for <code>jooq.orders.order_time</code>.
     */
    public void setOrderTime(OffsetDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq.orders.order_time</code>.
     */
    public OffsetDateTime getOrderTime() {
        return (OffsetDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<UUID> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<UUID, Long, BigDecimal, OffsetDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<UUID, Long, BigDecimal, OffsetDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<UUID> field1() {
        return Orders.ORDERS.ORDER_ID;
    }

    @Override
    public Field<Long> field2() {
        return Orders.ORDERS.USER_ID;
    }

    @Override
    public Field<BigDecimal> field3() {
        return Orders.ORDERS.ORDER_TOTAL;
    }

    @Override
    public Field<OffsetDateTime> field4() {
        return Orders.ORDERS.ORDER_TIME;
    }

    @Override
    public UUID component1() {
        return getOrderId();
    }

    @Override
    public Long component2() {
        return getUserId();
    }

    @Override
    public BigDecimal component3() {
        return getOrderTotal();
    }

    @Override
    public OffsetDateTime component4() {
        return getOrderTime();
    }

    @Override
    public UUID value1() {
        return getOrderId();
    }

    @Override
    public Long value2() {
        return getUserId();
    }

    @Override
    public BigDecimal value3() {
        return getOrderTotal();
    }

    @Override
    public OffsetDateTime value4() {
        return getOrderTime();
    }

    @Override
    public OrdersRecord value1(UUID value) {
        setOrderId(value);
        return this;
    }

    @Override
    public OrdersRecord value2(Long value) {
        setUserId(value);
        return this;
    }

    @Override
    public OrdersRecord value3(BigDecimal value) {
        setOrderTotal(value);
        return this;
    }

    @Override
    public OrdersRecord value4(OffsetDateTime value) {
        setOrderTime(value);
        return this;
    }

    @Override
    public OrdersRecord values(UUID value1, Long value2, BigDecimal value3, OffsetDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OrdersRecord
     */
    public OrdersRecord() {
        super(Orders.ORDERS);
    }

    /**
     * Create a detached, initialised OrdersRecord
     */
    public OrdersRecord(UUID orderId, Long userId, BigDecimal orderTotal, OffsetDateTime orderTime) {
        super(Orders.ORDERS);

        setOrderId(orderId);
        setUserId(userId);
        setOrderTotal(orderTotal);
        setOrderTime(orderTime);
    }
}
