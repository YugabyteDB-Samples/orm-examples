/*
 * This file is generated by jOOQ.
 */
package com.yugabyte.jooqdemo.db;


import com.yugabyte.jooqdemo.db.tables.OrderLines;
import com.yugabyte.jooqdemo.db.tables.Orders;
import com.yugabyte.jooqdemo.db.tables.Products;
import com.yugabyte.jooqdemo.db.tables.Users;
import com.yugabyte.jooqdemo.db.tables.records.OrderLinesRecord;
import com.yugabyte.jooqdemo.db.tables.records.OrdersRecord;
import com.yugabyte.jooqdemo.db.tables.records.ProductsRecord;
import com.yugabyte.jooqdemo.db.tables.records.UsersRecord;

import javax.annotation.processing.Generated;

import org.jooq.ForeignKey;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables in
 * jooq.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.2",
        "schema version:jooq_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<OrderLinesRecord> PK_ORDER_LINES = Internal.createUniqueKey(OrderLines.ORDER_LINES, DSL.name("pk_order_lines"), new TableField[] { OrderLines.ORDER_LINES.ORDER_ID, OrderLines.ORDER_LINES.PRODUCT_ID }, true);
    public static final UniqueKey<OrdersRecord> PK_ORDERS = Internal.createUniqueKey(Orders.ORDERS, DSL.name("pk_orders"), new TableField[] { Orders.ORDERS.ORDER_ID }, true);
    public static final UniqueKey<ProductsRecord> PK_PRODUCTS = Internal.createUniqueKey(Products.PRODUCTS, DSL.name("pk_products"), new TableField[] { Products.PRODUCTS.PRODUCT_ID }, true);
    public static final UniqueKey<UsersRecord> PK_USERS = Internal.createUniqueKey(Users.USERS, DSL.name("pk_users"), new TableField[] { Users.USERS.USER_ID }, true);

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<OrderLinesRecord, OrdersRecord> ORDER_LINES__FK_ORDER_LINES_ORDERS = Internal.createForeignKey(OrderLines.ORDER_LINES, DSL.name("fk_order_lines_orders"), new TableField[] { OrderLines.ORDER_LINES.ORDER_ID }, Keys.PK_ORDERS, new TableField[] { Orders.ORDERS.ORDER_ID }, true);
    public static final ForeignKey<OrderLinesRecord, ProductsRecord> ORDER_LINES__FK_ORDER_LINES_PRODUCTS = Internal.createForeignKey(OrderLines.ORDER_LINES, DSL.name("fk_order_lines_products"), new TableField[] { OrderLines.ORDER_LINES.PRODUCT_ID }, Keys.PK_PRODUCTS, new TableField[] { Products.PRODUCTS.PRODUCT_ID }, true);
    public static final ForeignKey<OrdersRecord, UsersRecord> ORDERS__FK_ORDERS_USERS = Internal.createForeignKey(Orders.ORDERS, DSL.name("fk_orders_users"), new TableField[] { Orders.ORDERS.USER_ID }, Keys.PK_USERS, new TableField[] { Users.USERS.USER_ID }, true);
}
