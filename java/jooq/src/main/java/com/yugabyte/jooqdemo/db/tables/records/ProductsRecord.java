/*
 * This file is generated by jOOQ.
 */
package com.yugabyte.jooqdemo.db.tables.records;


import com.yugabyte.jooqdemo.db.tables.Products;

import java.math.BigDecimal;

import javax.annotation.processing.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "https://www.jooq.org",
        "jOOQ version:3.16.2",
        "schema version:jooq_1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductsRecord extends UpdatableRecordImpl<ProductsRecord> implements Record4<Long, String, String, BigDecimal> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>jooq.products.product_id</code>.
     */
    public void setProductId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>jooq.products.product_id</code>.
     */
    public Long getProductId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>jooq.products.product_name</code>.
     */
    public void setProductName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>jooq.products.product_name</code>.
     */
    public String getProductName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>jooq.products.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>jooq.products.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>jooq.products.price</code>.
     */
    public void setPrice(BigDecimal value) {
        set(3, value);
    }

    /**
     * Getter for <code>jooq.products.price</code>.
     */
    public BigDecimal getPrice() {
        return (BigDecimal) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, String, String, BigDecimal> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Long, String, String, BigDecimal> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Products.PRODUCTS.PRODUCT_ID;
    }

    @Override
    public Field<String> field2() {
        return Products.PRODUCTS.PRODUCT_NAME;
    }

    @Override
    public Field<String> field3() {
        return Products.PRODUCTS.DESCRIPTION;
    }

    @Override
    public Field<BigDecimal> field4() {
        return Products.PRODUCTS.PRICE;
    }

    @Override
    public Long component1() {
        return getProductId();
    }

    @Override
    public String component2() {
        return getProductName();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public BigDecimal component4() {
        return getPrice();
    }

    @Override
    public Long value1() {
        return getProductId();
    }

    @Override
    public String value2() {
        return getProductName();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public BigDecimal value4() {
        return getPrice();
    }

    @Override
    public ProductsRecord value1(Long value) {
        setProductId(value);
        return this;
    }

    @Override
    public ProductsRecord value2(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public ProductsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public ProductsRecord value4(BigDecimal value) {
        setPrice(value);
        return this;
    }

    @Override
    public ProductsRecord values(Long value1, String value2, String value3, BigDecimal value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ProductsRecord
     */
    public ProductsRecord() {
        super(Products.PRODUCTS);
    }

    /**
     * Create a detached, initialised ProductsRecord
     */
    public ProductsRecord(Long productId, String productName, String description, BigDecimal price) {
        super(Products.PRODUCTS);

        setProductId(productId);
        setProductName(productName);
        setDescription(description);
        setPrice(price);
    }
}
