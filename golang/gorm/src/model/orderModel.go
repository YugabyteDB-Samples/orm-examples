package model

import (
	"github.com/google/uuid"
	"github.com/jinzhu/gorm"
	"time"
)

type OrderLine struct {
	Order     Order     `gorm:"association_foreignkey:OrderId"`
	OrderId   uuid.UUID `gorm:"primary_key"`
	Product   Product   `gorm:"association_foreignkey:ProductId"`
	ProductId int64     `gorm:"primary_key" json:"productId"`
	Units     int       `json:"units"`
}

func (OrderLine) TableName() string {
	return "orderline"
}

type Order struct {
	OrderId    uuid.UUID   `gorm:"primary_key;AUTO_INCREMENT"`
	OrderTime  time.Time   `gorm:"default:CURRENT_TIMESTAMP"`
	OrderTotal float64     `gorm:"type:numeric(10,2)"`
	User       User        `gorm:"association_foreignkey:UserId"`
	UserId     int64       `json:"userId"`
	Products   []OrderLine `json:"products"`
}

/* BeforeCreate will set an autogenerated UUID. */
func (order *Order) BeforeCreate(scope *gorm.Scope) error {
	uuid, err := uuid.NewRandom()
	if err != nil {
		return err
	}
	return scope.SetColumn("OrderId", uuid)
}
